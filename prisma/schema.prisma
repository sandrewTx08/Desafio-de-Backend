// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int      @id @default(autoincrement())
  join       DateTime @default(now())
  age        DateTime
  email      String   @db.VarChar(150)
  first_name String   @db.VarChar(75)
  last_name  String   @db.VarChar(75)
  phone      Int

  Accounts Accounts[]
}

model Transactions {
  id     Int      @id @default(autoincrement())
  date   DateTime @default(now())
  amount Decimal  @db.Money

  Account2      Accounts? @relation("Account2", fields: [to_account_id], references: [id])
  to_account_id Int?

  Account1        Accounts @relation("Account1", fields: [from_account_id], references: [id])
  from_account_id Int

  TransactionTypes TransactionTypes @relation(fields: [transaction_type], references: [id])
  transaction_type Int
}

model TransactionTypes {
  id                      Int                       @id @default(autoincrement())
  description             String                    @db.VarChar(75)
  Transactions            Transactions[]
  AccountTransactionTypes AccountTransactionTypes[]
}

model Accounts {
  created_at DateTime @default(now())
  balance    Decimal? @default(0) @db.Money

  Users Users @relation(fields: [id], references: [id])
  id    Int

  AccountTypes    AccountTypes @relation(fields: [account_type_id], references: [id])
  account_type_id Int

  Account1 Transactions[] @relation("Account1")
  Account2 Transactions[] @relation("Account2")
  Products Products[]

  @@id([id])
}

model AccountTransactionTypes {
  fee_percentage Decimal @db.Decimal(3, 3)
  fee_fixed      Decimal @db.Money

  AccountTypes    AccountTypes @relation(fields: [account_type_id], references: [id])
  account_type_id Int

  TransactionTypes    TransactionTypes @relation(fields: [transaction_type_id], references: [id])
  transaction_type_id Int

  @@id([account_type_id, transaction_type_id])
}

model AccountTypes {
  id                      Int                       @id @default(autoincrement())
  description             String                    @db.VarChar(75)
  Accounts                Accounts[]
  AccountTransactionTypes AccountTransactionTypes[]
}

model Products {
  id       Int     @id @default(autoincrement())
  price    Decimal @db.Money
  quantity Int
  name     String  @db.VarChar(75)

  Accounts   Accounts @relation(fields: [account_id], references: [id])
  account_id Int

  ProductTypes    ProductTypes @relation(fields: [product_type_id], references: [id])
  product_type_id Int
}

model ProductTypes {
  id          Int        @id @default(autoincrement())
  description String     @db.VarChar(75)
  Products    Products[]
}
